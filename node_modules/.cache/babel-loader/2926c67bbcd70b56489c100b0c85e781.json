{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from \"react\";\nimport { SpinnerIcon } from \"./icons\";\n\nvar Image = function (_Component) {\n  _inherits(Image, _Component);\n\n  function Image() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Image);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      loading: true\n    }, _this.handleOnLoad = function () {\n      _this.setState({\n        loading: false\n      });\n    }, _this.handleOnContextMenu = function (event) {\n      !_this.props.contextMenu && event.preventDefault();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Image.prototype.render = function render() {\n    var _props = this.props,\n        id = _props.id,\n        className = _props.className,\n        src = _props.src,\n        style = _props.style,\n        handleDoubleClick = _props.handleDoubleClick;\n    return React.createElement(\"div\", null, this.state.loading && React.createElement(SpinnerIcon, null), React.createElement(\"img\", {\n      id: id,\n      className: className,\n      src: src,\n      style: style,\n      onLoad: this.handleOnLoad,\n      onDoubleClick: handleDoubleClick,\n      onContextMenu: this.handleOnContextMenu\n    }));\n  };\n\n  return Image;\n}(Component);\n\nexport { Image as default };","map":null,"metadata":{},"sourceType":"module"}