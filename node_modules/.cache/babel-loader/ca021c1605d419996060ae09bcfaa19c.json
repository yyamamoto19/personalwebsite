{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from \"react\";\nimport StyleInjector, { lightboxStyles } from \"./styles\";\nimport Header from \"./Header\";\nimport Image from \"./Image\";\n\nvar Lightbox = function (_Component) {\n  _inherits(Lightbox, _Component);\n\n  function Lightbox() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Lightbox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      move: {\n        x: 0,\n        y: 0\n      },\n      moveStart: undefined,\n      zoomed: false,\n      rotationDeg: 0\n    }, _this.handleKeyDown = function (event) {\n      // ESC or ENTER closes the modal\n      if (event.keyCode === 27 || event.keyCode === 13) {\n        _this.props.onClose();\n      }\n    }, _this.getCoordinatesIfOverImg = function (event) {\n      var point = event.changedTouches ? event.changedTouches[0] : event;\n\n      if (point.target.id !== \"react-modal-image-img\") {\n        // the img was not a target of the coordinates\n        return;\n      }\n\n      var dim = _this.contentEl.getBoundingClientRect();\n\n      var x = point.clientX - dim.left;\n      var y = point.clientY - dim.top;\n      return {\n        x: x,\n        y: y\n      };\n    }, _this.handleMouseDownOrTouchStart = function (event) {\n      event.preventDefault();\n\n      if (event.touches && event.touches.length > 1) {\n        // more than one finger, ignored\n        return;\n      }\n\n      var coords = _this.getCoordinatesIfOverImg(event);\n\n      if (!coords) {\n        // click outside the img => close modal\n        _this.props.onClose();\n      }\n\n      if (!_this.state.zoomed) {\n        // do not allow drag'n'drop if zoom has not been applied\n        return;\n      }\n\n      _this.setState(function (prev) {\n        return {\n          moveStart: {\n            x: coords.x - prev.move.x,\n            y: coords.y - prev.move.y\n          }\n        };\n      });\n    }, _this.handleMouseMoveOrTouchMove = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.zoomed || !_this.state.moveStart) {\n        // do not allow drag'n'drop if zoom has not been applied\n        // or if there has not been a click\n        return;\n      }\n\n      if (event.touches && event.touches.length > 1) {\n        // more than one finger, ignored\n        return;\n      }\n\n      var coords = _this.getCoordinatesIfOverImg(event);\n\n      if (!coords) {\n        return;\n      }\n\n      _this.setState(function (prev) {\n        return {\n          move: {\n            x: coords.x - prev.moveStart.x,\n            y: coords.y - prev.moveStart.y\n          }\n        };\n      });\n    }, _this.handleMouseUpOrTouchEnd = function (event) {\n      _this.setState({\n        moveStart: undefined\n      });\n    }, _this.toggleZoom = function (event) {\n      event.preventDefault();\n\n      _this.setState(function (prev) {\n        return {\n          zoomed: !prev.zoomed,\n          // reset position if zoomed out\n          move: prev.zoomed ? {\n            x: 0,\n            y: 0\n          } : prev.move\n        };\n      });\n    }, _this.toggleRotate = function (event) {\n      event.preventDefault();\n      var rotationDeg = _this.state.rotationDeg;\n\n      if (rotationDeg === 360) {\n        _this.setState({\n          rotationDeg: 90\n        });\n\n        return;\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          rotationDeg: prevState.rotationDeg += 90\n        };\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Lightbox.prototype.componentDidMount = function componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\n  };\n\n  Lightbox.prototype.componentWillUnmount = function componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\n  };\n\n  Lightbox.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        medium = _props.medium,\n        large = _props.large,\n        alt = _props.alt,\n        onClose = _props.onClose,\n        hideDownload = _props.hideDownload,\n        hideZoom = _props.hideZoom,\n        showRotate = _props.showRotate,\n        _props$imageBackgroun = _props.imageBackgroundColor,\n        imageBackgroundColor = _props$imageBackgroun === undefined ? \"black\" : _props$imageBackgroun;\n    var _state = this.state,\n        move = _state.move,\n        zoomed = _state.zoomed,\n        rotationDeg = _state.rotationDeg;\n    return React.createElement(\"div\", null, React.createElement(StyleInjector, {\n      name: \"__react_modal_image__lightbox\",\n      css: lightboxStyles({\n        imageBackgroundColor: imageBackgroundColor\n      })\n    }), React.createElement(\"div\", {\n      className: \"__react_modal_image__modal_container\"\n    }, React.createElement(\"div\", {\n      className: \"__react_modal_image__modal_content\",\n      onMouseDown: this.handleMouseDownOrTouchStart,\n      onMouseUp: this.handleMouseUpOrTouchEnd,\n      onMouseMove: this.handleMouseMoveOrTouchMove,\n      onTouchStart: this.handleMouseDownOrTouchStart,\n      onTouchEnd: this.handleMouseUpOrTouchEnd,\n      onTouchMove: this.handleMouseMoveOrTouchMove,\n      ref: function ref(el) {\n        _this2.contentEl = el;\n      }\n    }, zoomed && React.createElement(Image, {\n      id: \"react-modal-image-img\",\n      className: \"__react_modal_image__large_img\",\n      src: large || medium,\n      style: {\n        transform: \"translate3d(-50%, -50%, 0) translate3d(\" + move.x + \"px, \" + move.y + \"px, 0) rotate(\" + rotationDeg + \"deg)\",\n        WebkitTransform: \"translate3d(-50%, -50%, 0) translate3d(\" + move.x + \"px, \" + move.y + \"px, 0) rotate(\" + rotationDeg + \"deg)\",\n        MsTransform: \"translate3d(-50%, -50%, 0) translate3d(\" + move.x + \"px, \" + move.y + \"px, 0) rotate(\" + rotationDeg + \"deg)\"\n      },\n      handleDoubleClick: this.toggleZoom\n    }), !zoomed && React.createElement(Image, {\n      id: \"react-modal-image-img\",\n      className: \"__react_modal_image__medium_img\",\n      src: medium || large,\n      handleDoubleClick: this.toggleZoom,\n      contextMenu: !medium,\n      style: {\n        transform: \"translate3d(-50%, -50%, 0) rotate(\" + rotationDeg + \"deg)\",\n        WebkitTransform: \"translate3d(-50%, -50%, 0) rotate(\" + rotationDeg + \"deg)\",\n        MsTransform: \"translate3d(-50%, -50%, 0) rotate(\" + rotationDeg + \"deg)\"\n      }\n    })), React.createElement(Header, {\n      image: large || medium,\n      alt: alt,\n      zoomed: zoomed,\n      toggleZoom: this.toggleZoom,\n      toggleRotate: this.toggleRotate,\n      onClose: onClose,\n      enableDownload: !hideDownload,\n      enableZoom: !hideZoom,\n      enableRotate: !!showRotate\n    })));\n  };\n\n  return Lightbox;\n}(Component);\n\nexport { Lightbox as default };","map":null,"metadata":{},"sourceType":"module"}